{"version":3,"file":"static/js/751.a034321d.chunk.js","mappings":"wOAIaA,EAAe,WAAO,IAAD,MAChC,GAIIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,aAHlBC,EADF,EACEA,SADF,IAEEC,UAAaC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,QACrBC,EAHF,EAGEA,aAGIC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,+BACE,kBAAMC,SAAUH,GAZH,SAAAI,GACfH,GACEI,EAAAA,EAAAA,IAAa,CACXC,KAAMF,EAAKG,SACXC,MAAOJ,EAAKI,MACZC,SAAUL,EAAKK,WAGpB,IAIG,WACE,mBAAOC,QAAQ,GAAf,uBAEE,oCACMd,EAAS,WAAY,CACvBe,SAAU,0BACVC,UAAW,CACTC,MAAO,EACPC,QAAS,4CALf,IAQEC,KAAK,cAGT,0BACS,OAANjB,QAAM,IAANA,OAAA,EAAAA,EAAQS,YAAY,wBAAU,OAANT,QAAM,IAANA,GAAA,UAAAA,EAAQS,gBAAR,eAAkBO,UAAW,cAExD,mBAAOJ,QAAQ,GAAf,oBAEE,oCACMd,EAAS,QAAS,CACpBe,SAAU,0BACVK,QAAS,CACPH,MAAO,2CACPC,QAAS,4BALf,IAQEC,KAAK,eAGT,0BACS,OAANjB,QAAM,IAANA,OAAA,EAAAA,EAAQU,SAAS,wBAAU,OAANV,QAAM,IAANA,GAAA,UAAAA,EAAQU,aAAR,eAAeM,UAAW,cAElD,mBAAOJ,QAAQ,GAAf,uBAEE,oCACMd,EAAS,WAAY,CACvBe,SAAU,0BACVK,QAAS,CACPH,MAAO,8BACPC,QAAS,+BALf,IAQEC,KAAK,cAGT,0BACS,OAANjB,QAAM,IAANA,OAAA,EAAAA,EAAQW,YAAY,wBAAU,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQW,gBAAR,eAAkBK,UAAW,cAExD,kBAAOC,KAAK,SAASE,UAAWlB,QAIvC,EC3Ec,SAASmB,IACtB,OACE,4BACE,sCACA,SAACzB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n  } = useForm({ mode: 'onChange' });\n\n  const dispatch = useDispatch();\n  const onSubmit = data => {\n    dispatch(\n      registration({\n        name: data.username,\n        email: data.email,\n        password: data.password,\n      })\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"\">\n          Username:\n          <input\n            {...register('username', {\n              required: 'this field is required!',\n              minLength: {\n                value: 3,\n                message: 'length must be at least 3 characters!',\n              },\n            })}\n            type=\"name\"\n          />\n        </label>\n        <div>\n          {errors?.username && <p>{errors?.username?.message || 'Error!'}</p>}\n        </div>\n        <label htmlFor=\"\">\n          Email:\n          <input\n            {...register('email', {\n              required: 'this field is required!',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'invalid email address',\n              },\n            })}\n            type=\"email\"\n          />\n        </label>\n        <div>\n          {errors?.email && <p>{errors?.email?.message || 'Error!'}</p>}\n        </div>\n        <label htmlFor=\"\">\n          Password:\n          <input\n            {...register('password', {\n              required: 'this field is required!',\n              pattern: {\n                value: /^[a-zA-Z0-9!@#$%^&*]{6,16}$/,\n                message: 'invalid password address',\n              },\n            })}\n            type=\"text\"\n          />\n        </label>\n        <div>\n          {errors?.password && <p>{errors?.password?.message || 'Error!'}</p>}\n        </div>\n        <input type=\"submit\" disabled={!isValid}></input>\n      </form>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <h1>Register</h1>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","useForm","mode","register","formState","errors","isValid","handleSubmit","dispatch","useDispatch","onSubmit","data","registration","name","username","email","password","htmlFor","required","minLength","value","message","type","pattern","disabled","Register"],"sourceRoot":""}