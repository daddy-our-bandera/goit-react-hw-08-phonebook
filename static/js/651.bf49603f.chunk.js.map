{"version":3,"file":"static/js/651.bf49603f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/Section/Section.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormBox = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  margin-top: 50px;\n  width: 300px;\n  padding: 40px 30px;\n  background-image: linear-gradient(\n    to right top,\n    #d16ba5,\n    #bc5ea3,\n    #a553a1,\n    #8b4a9f,\n    #6e429c,\n    #5c52ad,\n    #4161bc,\n    #006fc7,\n    #0095e0,\n    #00b8ed,\n    #00dbf1,\n    #5ffbf1\n  );\n  box-sizing: border-box;\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  h2 {\n    margin: 0 0 30px;\n    padding: 0;\n    color: #fff;\n    text-align: center;\n  }\n`;\nexport const Form = styled.form`\n  input {\n    width: 100%;\n    padding: 7px 0;\n    font-size: 14px;\n    color: #fff;\n    margin-bottom: 30px;\n    border: none;\n    border-bottom: 1px solid #fff;\n    outline: none;\n    background: transparent;\n    :focus {\n      border-bottom: 1px solid #10abff;\n    }\n  }\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus input:-webkit-autofill,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-text-fill-color: #fff;\n    -webkit-box-shadow: 0 0 0px 1000px transparent inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n  label {\n    position: absolute;\n    top: -20px;\n    left: 0;\n    padding: 10px 0;\n    font-size: 12px;\n    color: #03e9f4;\n    pointer-events: none;\n    transition: 0.5s;\n  }\n`;\nexport const UserBox = styled.div`\n  position: relative;\n`;\nexport const Btn = styled.button`\n  display: inline-block;\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  will-change: box-shadow, transform;\n  background: #fff;\n  box-shadow: 0px 2px 4px rgb(45 35 66 / 40%),\n    0px 7px 13px -3px rgb(45 35 66 / 30%),\n    inset 0px -3px 0px rgb(58 65 111 / 50%);\n  padding: 0 32px;\n  border-radius: 6px;\n  color: black;\n  width: 100%;\n  padding: 10px 0;\n  font-size: 18px;\n  text-shadow: 0 1px 0 rgb(0 0 0 / 40%);\n  transition: background 0.3s ease, transform 0.3s ease;\n  :hover {\n    color: #fff;\n    background: #0070f3;\n    box-shadow: 0px 4px 8px rgb(45 35 66 / 40%),\n      0px 7px 13px -3px rgb(45 35 66 / 30%), inset 0px -3px 0px #3c4fe0;\n    transform: translateY(-2px);\n  }\n  :active {\n    box-shadow: inset 0px 3px 7px #3c4fe0;\n    transform: translateY(2px);\n  }\n`;\n","import styled from '@emotion/styled';\nexport const Section = styled.section`\n  text-align: center;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    const filterContacts = contacts.items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    const sortContacts = filterContacts.sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    return sortContacts;\n  }\n);\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { Btn, Form, FormBox, UserBox } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n    reset,\n    getValues,\n  } = useForm({ mode: 'onChange' });\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const newName = getValues('name');\n    const newNumber = getValues('number');\n\n    if (\n      contacts.items.some(\n        ({ name }) => name.toLowerCase() === newName.toLowerCase()\n      ) ||\n      contacts.items.some(\n        ({ number }) => number.toLowerCase() === newNumber.toLowerCase()\n      )\n    ) {\n      toast.error(`${newName}  or <${newNumber}> is already in contacts`, {\n        theme: 'colored',\n      });\n      return;\n    }\n    dispatch(addContact(data));\n    reset();\n  };\n  return (\n    <FormBox>\n      <h2>Phonebook</h2>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <UserBox>\n          <input\n            placeholder=\"Phone:\"\n            {...register('name', {\n              required: 'this field is required!',\n            })}\n            type=\"name\"\n          />\n          <label htmlFor=\"\">\n            {errors?.name && <p>{errors.name.message || 'Error!'}</p>}\n          </label>\n        </UserBox>\n        <UserBox>\n          <input\n            placeholder=\"Number:\"\n            {...register('number', {\n              required: 'this field is required!',\n              minLength: {\n                min: 3,\n                message: 'length must be at least 3 characters!',\n              },\n            })}\n            type=\"tel\"\n          />\n          <label htmlFor=\"\">\n            {errors?.number && <p>{errors.number.message || 'Error!'}</p>}\n          </label>\n        </UserBox>\n        <Btn type=\"submit\" disabled={!isValid}>\n          add contact\n        </Btn>\n      </Form>\n    </FormBox>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  width: 1500px;\n  padding: 10px 10px;\n\n  justify-content: space-between;\n  span {\n  }\n  button {\n    border-radius: 5px;\n    cursor: pointer;\n    border: none;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n      rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n      rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n    :hover {\n      color: #fff;\n      background: rgb(218, 70, 70);\n      box-shadow: 0px 4px 8px rgb(45 35 66 / 40%),\n        0px 7px 13px -3px rgb(45 35 66 / 30%),\n        inset 0px -3px 0px rgb(218, 70, 70);\n      transform: translateY(-2px);\n    }\n    :active {\n      box-shadow: inset 0px 3px 7px rgb(218, 70, 70);\n      transform: translateY(2px);\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactItem } from './ContactListItem.styled';\n\nexport const Item = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <ContactItem>\n      <span>\n        {name} : {number}\n      </span>\n\n      <button type=\"button\" onClick={() => handleDelete(id)}>\n        Delete contact\n      </button>\n    </ContactItem>\n  );\n};\n\nItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin-top: 20px;\n  width: 200px;\n  padding: 7px 5px;\n  font-size: 14px;\n  color: #fff;\n  margin-bottom: 30px;\n  border: none;\n  border: 1px solid #fff;\n  outline: none;\n  background: transparent;\n  :focus {\n    border: 2px solid lightgreen;\n  }\n`;\nexport const SubTitleBox = styled.div`\n  padding-top: 20px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LoaderBox = styled.div`\n  display: flex;\n  height: 20px;\n\n  justify-content: center;\n  align-items: center;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { filterChange } from 'redux/contacts/filterSlice';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { Input, LoaderBox, SubTitleBox } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(getContacts) || [];\n  const filter = useSelector(getFilter);\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n  return (\n    <div>\n      <SubTitleBox>\n        <LoaderBox> {isLoading && <Loader></Loader>}</LoaderBox>\n\n        <h2>Contacts</h2>\n      </SubTitleBox>\n      {items.length ? (\n        <Input\n          autoComplete=\"off\"\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"find contacts by name\"\n          value={filter}\n          onChange={handleFilter}\n        ></Input>\n      ) : (\n        <h1>No contacts added</h1>\n      )}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  width: 400px;\n  padding: 0px 0;\n  gap: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Item } from 'components/ContactListItem/ContactListItem';\nimport { Filter } from 'components/Filter/Filter';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <>\n        <Filter />\n        <List>\n          {filteredContacts.map(({ id, name, number }) => (\n            <Item key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      </>\n    </div>\n  );\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Section } from 'components/Section/Section.styled';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <Section>\n        <ContactForm />\n      </Section>\n\n      <Section>\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n"],"names":["FormBox","styled","Form","UserBox","Btn","Section","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","items","contact","includes","sort","localeCompare","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","getValues","useSelector","dispatch","useDispatch","onSubmit","data","newName","newNumber","some","number","toast","theme","addContact","placeholder","required","type","htmlFor","message","minLength","min","disabled","ContactItem","Item","id","onClick","contactId","deleteContact","Input","SubTitleBox","LoaderBox","Filter","isLoading","Loader","autoComplete","onChange","event","filterChange","currentTarget","List","ContactList","filteredContacts","useEffect","fetchContacts","Contacts"],"sourceRoot":""}